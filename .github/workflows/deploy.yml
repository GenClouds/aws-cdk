name: CDK Workflow

on:
  push:
    branches: [ main ]
    paths:
      - 'environments/dev/**'
      - 'environments/prod/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'environments/dev/**'
      - 'environments/prod/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  detect-changes:
    name: Detect Environment Changes
    runs-on: ubuntu-latest
    outputs:
      dev-changed: ${{ steps.changes.outputs.dev }}
      prod-changed: ${{ steps.changes.outputs.prod }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            dev:
              - 'environments/dev/**'
            prod:
              - 'environments/prod/**'

  build-and-test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.detect-changes.outputs.dev-changed == 'true'
    needs: [build-and-test, detect-changes]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions-dev
      - name: CDK Bootstrap
        run: cdk bootstrap
      - name: CDK Synth
        run: cdk synth -c env=dev --app "npx ts-node --prefer-ts-exts environments/dev/bin/aws-cdk.ts"
      - name: CDK Deploy to Dev
        run: |
          cdk deploy --all --require-approval never -c env=dev --app "npx ts-node --prefer-ts-exts environments/dev/bin/aws-cdk.ts" || \
          cdk deploy --all --require-approval never --no-previous-parameters -c env=dev --app "npx ts-node --prefer-ts-exts environments/dev/bin/aws-cdk.ts"
        env:
          ENVIRONMENT: dev
      - name: Confirm Deployment Completion
        run: echo "Successfully deployed to dev environment"

  deploy-prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.detect-changes.outputs.prod-changed == 'true'
    needs: [build-and-test, detect-changes]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install CDK
        run: npm install -g aws-cdk
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions-prod
      - name: CDK Bootstrap
        run: cdk bootstrap
      - name: CDK Synth
        run: cdk synth -c env=prod --app "npx ts-node --prefer-ts-exts environments/prod/bin/aws-cdk.ts"
      - name: CDK Deploy to Prod
        run: |
          cdk deploy --all --require-approval never -c env=prod --app "npx ts-node --prefer-ts-exts environments/prod/bin/aws-cdk.ts" || \
          cdk deploy --all --require-approval never --no-previous-parameters -c env=prod --app "npx ts-node --prefer-ts-exts environments/prod/bin/aws-cdk.ts"
        env:
          ENVIRONMENT: prod
      - name: Confirm Deployment Completion
        run: echo "Successfully deployed to prod environment"
