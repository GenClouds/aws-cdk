name: CDK Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

  deploy-environments:
    name: Deploy to All Environments
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-test
    strategy:
      matrix:
        environment: ['dev', 'prod']
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions-${{ matrix.environment }}

      # =============================================
      # REPLACED BOOTSTRAP STEP WITH ENHANCED VERSION
      # =============================================
      - name: Clean and Bootstrap Environment
        run: |
          # Clean up any existing CDK toolkit stack
          aws cloudformation delete-stack --stack-name CDKToolkit || true
          aws cloudformation wait stack-delete-complete --stack-name CDKToolkit || true
          
          # Bootstrap with explicit parameters and fresh token
          export BOOTSTRAP_TOKEN=$(date +%s)
          cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }} \
            --cloudformation-execution-policies arn:aws:iam::aws:policy/AdministratorAccess \
            --toolkit-stack-name CDKToolkit-$BOOTSTRAP_TOKEN \
            --force

      - name: CDK Synth
        run: cdk synth -c env=${{ matrix.environment }}

      # =============================================
      # ENHANCED DEPLOY STEP
      # =============================================
      - name: CDK Deploy to ${{ matrix.environment }}
        run: |
          export DEPLOY_TOKEN=$(date +%s)
          cdk deploy --all \
            --require-approval never \
            --no-previous-parameters \
            --ci \
            --exclusively \
            -c env=${{ matrix.environment }} \
            --toolkit-stack-name CDKToolkit-$BOOTSTRAP_TOKEN
        env:
          ENVIRONMENT: ${{ matrix.environment }}
          AWS_CLOUDFORMATION_CLIENT_TOKEN: $DEPLOY_TOKEN

      - name: Confirm Deployment Completion
        run: |
          echo "Successfully deployed all resources to ${{ matrix.environment }} environment in the same AWS account"
          echo "The Deployment to both dev and prod environments completed successfully"
